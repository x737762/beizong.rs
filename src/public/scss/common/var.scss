// --light: #c7ffed;
// --dark: #012030;
// --secondary: #3ca6a6;
// --hover: #022f46;
// --success: #67c23a;
// --warning: #e6563c;
// --danger: #f56c6c;
// --error: #f56c6c;
// --info: #0fc2c0;

// $namespace: 'el' !default;
// $common-separator: '-' !default;
// $element-separator: '__' !default;
// $state-prefix: 'is-' !default;

@use 'sass:map';
@use 'sass:math';
@use 'function' as *;

$types: primary, success, warning, danger, error, info;

$colors: () !default;
$colors: map.deep-merge(
  (
    'black': #012030,
    'white': #c7ffed,
    'primary': (
      'base': #012e40,
    ),
    'success': (
      'base': #67c23a,
    ),
    'warning': (
      'base': #e6a23c,
    ),
    'danger': (
      'base': #f56c6c,
    ),
    'error': (
      'base': #f56c6c,
    ),
    'info': (
      'base': #909399,
    ),
  ),
  $colors
);

$color-white: map-get($colors, 'white') !default;
$color-black: map-get($colors, 'black') !default;
$color-primary: map-get($colors, 'primary', 'base') !default;
$color-success: map-get($colors, 'success', 'base') !default;
$color-warning: map-get($colors, 'warning', 'base') !default;
$color-danger: map-get($colors, 'danger', 'base') !default;
$color-error: map-get($colors, 'error', 'base') !default;
$color-info: map-get($colors, 'info', 'base') !default;

@mixin set-color-level(
  $type,
  $number,
  $mode: 'light',
  $max-color: $color-white
) {
  $colors: map.deep-merge(
    (
      $type: (
        '#{$mode}-#{$number}':
          mix(
            $max-color,
            map-get($colors, $type, 'base'),
            math.percentage(math.div($number, 10))
          ),
      ),
    ),
    $colors
  ) !global;
}

@each $type in $types {
  @for $i from 1 through 9 {
    @include set-color-level($type, $i);
  }
}

// 文本顔色
$text-color: () !default;
$text-color: map.merge(
  (
    '': #303133,
    'black': #012030,
    'white': #c7ffed,
    'primary': #303133,
    'regular': #606266,
    'secondary': #909399,
    'placeholder': #a8abb2,
    'disabled': #c0c4cc,
  ),
  $text-color
);

// 背景顔色
$bg-color: () !default;
$bg-color: map.merge(
  (
    'white': getCssVar('color-white'),
    'black': getCssVar('color-black'),
  ),
  $bg-color
);

// 边框
$border-color: () !default;
$border-color: map.merge(
  (
    'white': getCssVar('color-white'),
    'black': getCssVar('color-black'),
  ),
  $border-color
);

$border-width: 1px !default;
$border-style: solid !default;

$border-radius: () !default;
$border-radius: map.merge(
  (
    'base': 8px,
    'small': 4px,
    'round': 20px,
    'circle': 100%,
  ),
  $border-radius
);

// 阴影
$box-shadow: () !default;
$box-shadow: map.merge(
  (
    '': (
      0px 12px 32px 4px rgba(0, 0, 0, 0.04),
      0px 8px 20px rgba(0, 0, 0, 0.08),
    ),
    'light': (
      0px 0px 12px rgba(0, 0, 0, 0.12),
    ),
    'lighter': (
      0px 0px 6px rgba(0, 0, 0, 0.12),
    ),
    'dark': (
      0px 16px 48px 16px rgba(0, 0, 0, 0.08),
      0px 12px 32px rgba(0, 0, 0, 0.12),
      0px 8px 16px -8px rgba(0, 0, 0, 0.16),
    ),
  ),
  $box-shadow
);

// 字体大小
$font-size: () !default;
$font-size: map.merge(
  (
    'base': 16px,
    'small': 14px,
  ),
  $font-size
);
